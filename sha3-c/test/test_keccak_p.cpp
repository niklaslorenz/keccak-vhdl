
#include <sha3/keccak_p.h>
#include <gtest/gtest.h>

static const keccak::StateArray challenge {
        11135145641564493638, 4690410588688054413, 5942120574033349132, 13573068674282494865, 8619542337573900380,
        14913265890990278630, 12293567811752120290, 5083587110792712687, 12176370342766063716, 9906014387961132879,
        7879745451526299310, 18170082350327207369, 15513735425375771008, 17112543871859983257, 7872178071685394028,
        18289554777626175141, 682470166150385253, 6714355573324303858, 14786747337765315131, 15725910239405511884,
        11932349210380144580, 12526531113480741395, 16479949546188248102, 5088349251940101775, 14454677966065213854
};

TEST(keccak_p, rotl) {
    ASSERT_EQ(0b0100001111111101111110110111001111011000011010111010001101001101,
              keccak::rotl(0b1001101010000111111110111111011011100111101100001101011101000110, 7));
}

static keccak::StateArray theta {
        9074302370870113994, 15286267072030484620, 402830098023599468, 14163636002501572733, 14352426547025607258,
        2999131593193203306, 4589048960692428771, 1255663659163178639, 14999596714094039944, 4164123666315238729,
        9958554602951147298, 7574224295686227400, 9271320461100097248, 10784320180623089781, 15965071356446229610,
        1925309939123128105, 11262529038166122084, 779028363056302738, 13107579041759183319, 7677902871850991306,
        4823819717382598216, 4099182555226321426, 12922250334435087174, 4489841723125435747, 8658626538535324568
};

TEST(keccak_p, theta) {
    keccak::StateArray result;
    keccak::theta(result, challenge);
    ASSERT_EQ(theta, result);
}

static const keccak::StateArray rho {
    11135145641564493638, 9380821177376108826, 1485530143508337283, 13594521990043390880, 12946796158717326880,
    1642826970421593350, 10736065470129809050, 11754925837671234513, 3626661675222111768, 13375661547741288339,
    7697731391081739635, 11846300435832317936, 6110266191960433799, 17904905873987925999, 13166051643878023089,
    16847205325208180232, 4741341731283272166, 1686859556966706839, 10053827174738798242, 4442813219128790234,
    16252315111372527200, 13212636306503862350, 15895051748555694724, 10324112311689085870, 6143377729240150566
};

TEST(keccak_p, rho) {
    keccak::StateArray result;
    keccak::rho(result, challenge);
    ASSERT_EQ(rho,result);
}

static const keccak::StateArray pi{
        11135145641564493638, 12293567811752120290, 15513735425375771008, 14786747337765315131, 14454677966065213854,
        13573068674282494865, 9906014387961132879, 7879745451526299310, 682470166150385253, 16479949546188248102,
        4690410588688054413, 5083587110792712687, 17112543871859983257, 15725910239405511884, 11932349210380144580,
        8619542337573900380, 14913265890990278630, 18170082350327207369, 6714355573324303858, 5088349251940101775,
        5942120574033349132, 12176370342766063716, 7872178071685394028, 18289554777626175141, 12526531113480741395
};

TEST(keccak_p, pi) {
    keccak::StateArray result;
    keccak::pi(result, challenge);
    ASSERT_EQ(pi, result);
}

static const keccak::StateArray rho_pi {
        11135145641564493638, 10736065470129809050, 6110266191960433799, 10053827174738798242, 6143377729240150566,
        13594521990043390880, 13375661547741288339, 7697731391081739635, 4741341731283272166, 15895051748555694724,
        9380821177376108826, 11754925837671234513, 17904905873987925999, 4442813219128790234, 16252315111372527200,
        12946796158717326880, 1642826970421593350, 11846300435832317936, 1686859556966706839, 10324112311689085870,
        1485530143508337283, 3626661675222111768, 13166051643878023089, 16847205325208180232, 13212636306503862350
};

TEST(keccak_p, rho_pi) {
    keccak::StateArray res1, res2;
    keccak::rho(res1, challenge);
    keccak::pi(res2, res1);
    ASSERT_EQ(rho_pi, res2);
}

static const keccak::StateArray chi {
        9865130445135729990, 17086295892730341660, 1293768093163850304, 3772892697877519507, 3931290727304362197,
        10012224700612630507, 209609359884906466, 5155658412626613988, 17185076540980080836, 12209325745756307279,
        7933300412350404270, 15283311067260327888, 15514852543175325156, 17094421171246469915, 18239184040838917933,
        12238441805229336375, 9901602538248350828, 5703394218348206390, 16786342411221598234, 15714671031697513612,
        16553185089561238496, 12672669268650182810, 7833043761328362806, 7177993226857980111, 13897634060854575501
};

TEST(keccak_p, chi) {
    keccak::StateArray result;
    keccak::chi(result, challenge);
    ASSERT_EQ(chi, result);

}