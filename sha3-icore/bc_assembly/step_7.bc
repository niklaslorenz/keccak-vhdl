
when 7 =>                       -- atoms process the block, setup block loop jump
    s_control1 <=
	-- REPLACE_AGU_CONTROL
	-- END_REPLACE

	s_control2 <=
	-- REPLACE_AGU_CONTROL
	-- END_REPLACE

	s_control3 <=
	-- REPLACE_LSU_CONTROL
	-- END_REPLACE

	s_control4 <=
	-- REPLACE_AGU_CONTROL
	-- END_REPLACE

	s_control5 <=
	-- REPLACE_PACK_CONTROL
	-- END_REPLACE

	s_control6 <=
	-- REPLACE_ATOM_CONTROL
	-- END_REPLACE

	s_control7 <=
	-- REPLACE_ATOM_CONTROL
	-- END_REPLACE

	s_control8 <=
	-- REPLACE_ATOM_CONTROL
    AtomInput0 := Signal0R
    AtomInput1 := Signal1R
    Signal0R := AtomOutput0
    Signal1R := AtomOutput1
	-- END_REPLACE

	s_control9 <=
	-- REPLACE_ATOM_CONTROL
    AtomInput0 := Signal0L
    AtomInput1 := Signal1L
    Signal0L := AtomOutput0
    Signal1L := AtomOutput1
	-- END_REPLACE

	s_control10 <=
	-- REPLACE_ATOM_CONTROL
	-- END_REPLACE

	s_control11 <=
	-- REPLACE_PACK_CONTROL
	-- END_REPLACE

	s_control12 <=
	-- REPLACE_AGU_CONTROL
	-- END_REPLACE

	s_control13 <=
	-- REPLACE_LSU_CONTROL
	-- END_REPLACE

	s_control14 <=
	-- REPLACE_AGU_CONTROL
	-- END_REPLACE

	s_control15 <=
	-- REPLACE_AGU_CONTROL
	-- END_REPLACE

    -- JMP_EXC_CONTROL
    -- INSTRUCTION := SET_JMP_STEPS
    -- SET := 01
    -- VALUE := 5
    -- END_JMP_EXC_CONTROL
