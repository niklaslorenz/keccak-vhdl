
when 0 =>                           -- init atoms; setup AGUs; prepare wait loop
	s_control1 <=                       -- setup agu 0 for atom 0
	-- REPLACE_AGU_CONTROL
	InitMode := 18
	BaseAddr := Signal0L
	DirectStride := 4
	-- END_REPLACE

	s_control2 <=                       -- setup agu 1 for atom 1
	-- REPLACE_AGU_CONTROL
    InitMode := 18
    BaseAddr := Signal1L
    DirectStride := 4
	-- END_REPLACE

	s_control3 <=
	-- REPLACE_LSU_CONTROL
	-- END_REPLACE

	s_control4 <=
	-- REPLACE_AGU_CONTROL
	-- END_REPLACE

	s_control5 <=
	-- REPLACE_PACK_CONTROL
	-- END_REPLACE

	s_control6 <=
	-- REPLACE_ATOM_CONTROL
	-- END_REPLACE

	s_control7 <=
	-- REPLACE_ATOM_CONTROL
	-- END_REPLACE

	s_control8 <=                       -- init atom 0
	-- REPLACE_ATOM_CONTROL
    AtomControl := 000001
	-- END_REPLACE

	s_control9 <=                       -- init atom 1
	-- REPLACE_ATOM_CONTROL
    AtomControl := 010001
	-- END_REPLACE

	s_control10 <=
	-- REPLACE_ATOM_CONTROL
	-- END_REPLACE

	s_control11 <=
	-- REPLACE_PACK_CONTROL
	-- END_REPLACE

	s_control12 <=
	-- REPLACE_AGU_CONTROL
	-- END_REPLACE

	s_control13 <=
	-- REPLACE_LSU_CONTROL
	-- END_REPLACE

	s_control14 <=
	-- REPLACE_AGU_CONTROL
	-- END_REPLACE

	s_control15 <=
	-- REPLACE_AGU_CONTROL
	-- END_REPLACE

	-- JMP_EXC_CONTROL                  -- setup jump set 0 as wait loop
    -- INSTRUCTION := SET_JMP_STEPS
    -- SET := 00
    -- VALUE := 1
    -- SIGN := 1
	-- END_JMP_EXC_CONTROL
